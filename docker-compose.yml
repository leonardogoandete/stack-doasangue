version: '3.1'
services:
  cadastrodb:
    image: mysql:8.0-debian
    container_name: cadastrodb
    environment:
      MYSQL_ROOT_PASSWORD: hibernate
      MYSQL_USER: app_cadastro
      MYSQL_PASSWORD: k4d45tr0
    volumes:
      - ./sql/cadastro.sql:/docker-entrypoint-initdb.d/seu_script.sql
    # ports:
    #   - 3306:3306

  postagemdb:
    image: postgres:16-bookworm
    container_name: postagemdb
    environment:
      POSTGRES_USER: app_postagem
      POSTGRES_PASSWORD: p0st4g3m
    volumes:
      - ./sql/postagem.sql:/docker-entrypoint-initdb.d/seu_script.sql

  postagem:
    image: leogoandete/postagens:latest
    container_name: postagem
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:postgresql://postagemdb:5432/postagemdb
      - QUARKUS_DATASOURCE_USERNAME=app_postagem
      - QUARKUS_DATASOURCE_PASSWORD=p0st4g3m
      - QUARKUS_DATASOURCE_KIND=postgresql
      #JAEGER ENV
      - QUARKUS_JAEGER_ENDPOINT=http://jaeger:4317
      #GRAYLOG
      - QUARKUS_LOG_HANDLER_GELF_HOST=graylog
      - QUARKUS_LOG_HANDLER_GELF_PORT=12201
      - PORT=8081
    depends_on:
      - jaeger
      - graylog
      - postagemdb

  cadastro:
    image: cadastro:1.0.0
    container_name: cadastro
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:mysql://cadastrodb:3306/cadastrodb
      - QUARKUS_DATASOURCE_USERNAME=app_cadastro
      - QUARKUS_DATASOURCE_PASSWORD=k4d45tr0
      - PORT=8083
      #JAEGER ENV
      - QUARKUS_JAEGER_ENDPOINT=http://jaeger:4317
      #GRAYLOG
      - QUARKUS_LOG_HANDLER_GELF_HOST=graylog
      - QUARKUS_LOG_HANDLER_GELF_PORT=12201
    depends_on:
      - jaeger
      - graylog
      - cadastrodb

  login:
    image: login:1.0.0
    container_name: login
    environment:
      - QUARKUS_DATASOURCE_JDBC_URL=jdbc:mysql://cadastrodb:3306/cadastrodb
      - QUARKUS_DATASOURCE_USERNAME=app_cadastro
      - QUARKUS_DATASOURCE_PASSWORD=k4d45tr0
      - PORT=8082
      #JAEGER ENV
      - QUARKUS_JAEGER_ENDPOINT=http://jaeger:4317
      #GRAYLOG
      - QUARKUS_LOG_HANDLER_GELF_HOST=graylog
      - QUARKUS_LOG_HANDLER_GELF_PORT=12201
    depends_on:
      - jaeger
      - graylog
      - cadastrodb
###########
  jaeger:
    image: jaegertracing/all-in-one:latest
    # ports:
    #   - "16686:16686" # Jaeger UI
    #   - "14268:14268" # Receive legacy OpenTracing traces, optional
    #   - "4317:4317"   # OTLP gRPC receiver
    #   - "4318:4318"   # OTLP HTTP receiver, not yet used by Quarkus, optional
    #   - "14250:14250" # Receive from external otel-collector, optional
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  elasticsearch:
    image: elastic/elasticsearch:7.16.3
    # ports:
    #   - "9200:9200"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m" # Use half of the available RAM
      discovery.type: "single-node" # Disable production mode

  mongo:
    image: mongo:5.0

  graylog:
    image: graylog/graylog:5.1
    # ports:
    #   - "9000:9000" # HTTP
    #   - "12201:12201/udp" # GELF UDP
    #   - "1514:1514" # GELF TCP
    environment:
      GRAYLOG_HTTP_EXTERNAL_URI: "http://127.0.0.1:9000/"
      # CHANGE ME (must be at least 16 characters)!
      GRAYLOG_PASSWORD_SECRET: "forpasswordencryption"
      # Password: admin
      GRAYLOG_ROOT_PASSWORD_SHA2: "8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918"
    depends_on:
      - elasticsearch
      - mongo

  curl:
    image: rapidfort/curl:latest
    command:
      - curl
      - -H
      - "Content-Type: application/json"
      - -H
      - "Authorization: Basic YWRtaW46YWRtaW4="
      - -H
      - "X-Requested-By: curl"
      - -X
      - POST
      - -v
      - -d
      - '{"title":"Application log input", "configuration":{"recv_buffer_size":262144, "bind_address":"0.0.0.0", "port":12201, "decompress_size_limit":8388608}, "type":"org.graylog2.inputs.gelf.udp.GELFUDPInput", "global":true}'
      - http://graylog:9000/api/system/inputs
    depends_on:
      graylog:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    volumes:
      - ./config:/etc/prometheus
      - ./data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    # ports:
    #   - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    volumes:
      - ./config/prometheus_ds.yml:/etc/grafana/provisioning/datasources/prometheus_ds.yml
    environment:
      -  GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    # ports:
    #   - 3000:3000